name: PR Validation

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    branches: [ main, develop ]

env:
  DOTNET_VERSION: '8.0.x'
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  SOLUTION_FILE: 'SmartInsight.sln'

jobs:
  validate-pr:
    name: Validate PR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Validate PR title
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
            revert
          requireScope: false
          subjectPattern: ^(?![A-Z]).+$
          subjectPatternError: 'The subject "{subject}" found in the pull request title "{title}" did not match the configured pattern. Please ensure that the subject starts with a lowercase character.'
      
      - name: List workspace contents
        run: |
          pwd
          ls -la
          find . -name "*.sln" -type f
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      
      - name: Restore dependencies
        run: dotnet restore ${{ env.SOLUTION_FILE }}
      
      - name: Build
        run: dotnet build ${{ env.SOLUTION_FILE }} --no-restore
      
      - name: Test
        run: dotnet test ${{ env.SOLUTION_FILE }} --no-build --verbosity normal

  # check-code-quality job is temporarily commented out
  # Will be restored when needed
  
  # check-code-quality:
  #   name: Check Code Quality
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #     
  #     - name: Setup .NET
  #       uses: actions/setup-dotnet@v4
  #       with:
  #         dotnet-version: ${{ env.DOTNET_VERSION }}
  #     
  #     - name: Install dotnet-format
  #       run: dotnet tool install -g dotnet-format
  #     
  #     - name: Check formatting
  #       run: dotnet format --verify-no-changes --verbosity diagnostic
  #     
  #     - name: SonarCloud Scan
  #       uses: SonarSource/sonarqube-scan-action@v5.0.0
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #         SONAR_HOST_URL: https://sonarcloud.io
  #       with:
  #         args: >
  #           -Dsonar.projectKey=SmartInsight
  #           -Dsonar.organization=elias-fluent
  #           -Dsonar.sources=src
  #           -Dsonar.tests=tests
  #           -Dsonar.cs.opencover.reportsPaths=./coverage/*/coverage.opencover.xml
  #     
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '18'
  #     
  #     - name: Install ESLint (UI only)
  #       working-directory: ./src/SmartInsight.UI
  #       run: |
  #         if [ -f "package.json" ]; then
  #           npm install --only=dev
  #           npm run lint || echo "ESLint check failed"
  #         else
  #           echo "No package.json found, skipping ESLint"
  #         fi 