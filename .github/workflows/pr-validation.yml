name: PR Validation

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ main, develop ]

env:
  DOTNET_VERSION: '8.0.x'
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  validate-pr:
    name: Validate PR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Validate PR title
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types:
            - feat
            - fix
            - docs
            - style
            - refactor
            - perf
            - test
            - build
            - ci
            - chore
            - revert
          requireScope: false
          subjectPattern: ^(?![A-Z]).+$
          subjectPatternError: 'The subject "{subject}" found in the pull request title "{title}" did not match the configured pattern. Please ensure that the subject starts with a lowercase character.'
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      
      - name: Restore dependencies
        run: dotnet restore SmartInsight.sln
      
      - name: Build
        run: dotnet build SmartInsight.sln --no-restore
      
      - name: Test
        run: dotnet test SmartInsight.sln --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage
      
      - name: Check test coverage
        uses: danielpalme/ReportGenerator-GitHub-Action@5.1.12
        with:
          reports: './coverage/**/coverage.cobertura.xml'
          targetdir: 'coveragereport'
          reporttypes: 'HtmlInline;Cobertura'
          verbosity: 'Info'
          tag: '${{ github.run_number }}_${{ github.run_id }}'
          customSettings: 'settings.minimumcoverage=80'
      
      - name: Upload coverage reports
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coveragereport
      
  check-code-quality:
    name: Check Code Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      
      - name: Install dotnet-format
        run: dotnet tool install -g dotnet-format
      
      - name: Check formatting
        run: dotnet format --verify-no-changes --verbosity diagnostic
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install ESLint (UI only)
        working-directory: ./src/SmartInsight.UI
        run: |
          if [ -f "package.json" ]; then
            npm install --only=dev
            npm run lint || echo "ESLint check failed"
          else
            echo "No package.json found, skipping ESLint"
          fi 